# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
    tags: "v*"
  pull_request:
    branches: ["main"]

env:
  GoVersion: 1.21

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GoVersion }}

      - name: Build
        run: go build -v ./...

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Docker Setup for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install docker
          colima start

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GoVersion }}

      - name: Test
        run: go test -v ./...

  release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GoVersion }}

      - name: Install zip
        run: sudo apt install zip

      - name: "Build"
        env:
          tag: ${{ github.ref_name }}
        run: |
          # Linux AMD64
          env GOOS=linux GOARCH=amd64 go build -ldflags="-X 'vineelsai.com/rce/src.Version=$tag'"
          tar -czvf rce-linux-amd64.tar.gz rce

          # Linux ARM64
          env GOOS=linux GOARCH=arm64 go build -ldflags="-X 'vineelsai.com/rce/src.Version=$tag'"
          tar -czvf rce-linux-arm64.tar.gz rce

          # MacOS AMD64
          env GOOS=darwin GOARCH=amd64 go build -ldflags="-X 'vineelsai.com/rce/src.Version=$tag'"
          tar -czvf rce-macos-amd64.tar.gz rce
          go clean

          # MacOS ARM64
          env GOOS=darwin GOARCH=arm64 go build -ldflags="-X 'vineelsai.com/rce/src.Version=$tag'"
          tar -czvf rce-macos-arm64.tar.gz rce
          go clean

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          prerelease: false
          files: |
            *.tar.gz
            *.zip
